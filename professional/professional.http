### Inventory/professional.http (REST Client collection)

@base = http://localhost:8000
@prefix = /professional/api

@token = <PUT_YOUR_JWT_ACCESS_TOKEN_HERE>
@pro_id = 12
@professional_service_id = 5
@service_id = 1
@trade_id = 1
@rating_id = 1
@payout_id = 1
@bankinfo_id = 1

########################################################
# PROFESSIONAL (CRUD) + rating actions
########################################################

### Create Professional (JSON; omit certification or use multipart below)
POST {{base}}{{prefix}}/professionals/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "license_number": "LIC-12345",
  "government_issued_id": "driver_license"
}

### Create Professional with certification (multipart)
POST {{base}}{{prefix}}/professionals/
Authorization: Bearer {{token}}
Content-Type: multipart/form-data; boundary=BOUNDARY

--BOUNDARY
Content-Disposition: form-data; name="license_number"

LIC-12345
--BOUNDARY
Content-Disposition: form-data; name="government_issued_id"

driver_license
--BOUNDARY
Content-Disposition: form-data; name="certification"; filename="cert.pdf"
Content-Type: application/pdf

< ./cert.pdf
--BOUNDARY--

### Retrieve Professional
GET {{base}}{{prefix}}/professionals/{{pro_id}}/
Authorization: Bearer {{token}}

### Update Professional (PATCH)
PATCH {{base}}{{prefix}}/professionals/{{pro_id}}/
Authorization: Bearer {{token}}
Content-Type: application/json

{ "license_number": "LIC-99999" }

### Delete Professional
DELETE {{base}}{{prefix}}/professionals/{{pro_id}}/
Authorization: Bearer {{token}}

### Rate a Professional (create/update your rating)
POST {{base}}{{prefix}}/professionals/{{pro_id}}/rate/
Authorization: Bearer {{token}}
Content-Type: application/json

{ "rating": 5, "review": "Excellent service!" }

### List all ratings for a Professional
GET {{base}}{{prefix}}/professionals/{{pro_id}}/ratings/
Authorization: Bearer {{token}}

### Get my rating for a Professional
GET {{base}}{{prefix}}/professionals/{{pro_id}}/my-rating/
Authorization: Bearer {{token}}

########################################################
# PROFESSIONAL SERVICES (CRUD)
########################################################

### Create Professional Service (attach a Service to me)
POST {{base}}{{prefix}}/professional-services/
Authorization: Bearer {{token}}
Content-Type: application/json

{ "service": {{service_id}} }

### List My Professional Services
GET {{base}}{{prefix}}/professional-services/
Authorization: Bearer {{token}}

### Retrieve Professional Service (use the professional_service_id, not service_id)
GET {{base}}{{prefix}}/professional-services/{{professional_service_id}}/
Authorization: Bearer {{token}}

### Update Professional Service
PATCH {{base}}{{prefix}}/professional-services/{{professional_service_id}}/
Authorization: Bearer {{token}}
Content-Type: application/json

{ "service": {{service_id}} }

### Delete Professional Service
DELETE {{base}}{{prefix}}/professional-services/{{professional_service_id}}/
Authorization: Bearer {{token}}

########################################################
# PROFESSIONAL INSURANCE (singleton per professional)
########################################################

### Create / Upload Insurance (multipart)
POST {{base}}{{prefix}}/professional-insurance/
Authorization: Bearer {{token}}
Content-Type: multipart/form-data; boundary=BOUNDARY

--BOUNDARY
Content-Disposition: form-data; name="insurance_provider_name"

ABC Insurance
--BOUNDARY
Content-Disposition: form-data; name="insurance_policy_number"

POL-123456
--BOUNDARY
Content-Disposition: form-data; name="insurance_expiry_date"

2030-12-31
--BOUNDARY
Content-Disposition: form-data; name="insurance_file"; filename="policy.pdf"
Content-Type: application/pdf

< ./policy.pdf
--BOUNDARY--

### Get My Insurance
GET {{base}}{{prefix}}/professional-insurance/me/
Authorization: Bearer {{token}}

### List Insurance (scoped to me; staff sees all)
GET {{base}}{{prefix}}/professional-insurance/
Authorization: Bearer {{token}}

### Retrieve Insurance by id
GET {{base}}{{prefix}}/professional-insurance/1/
Authorization: Bearer {{token}}

### Update Insurance
PATCH {{base}}{{prefix}}/professional-insurance/1/
Authorization: Bearer {{token}}
Content-Type: application/json

{ "insurance_provider_name": "XYZ Insurance" }

### Delete Insurance
DELETE {{base}}{{prefix}}/professional-insurance/1/
Authorization: Bearer {{token}}

########################################################
# PROFESSIONAL TRADES (CRUD)
########################################################

### Create Trade (multipart)
POST {{base}}{{prefix}}/professional-trades/
Authorization: Bearer {{token}}
Content-Type: multipart/form-data; boundary=BOUNDARY

--BOUNDARY
Content-Disposition: form-data; name="trade_license_number"

TL-2025-0001
--BOUNDARY
Content-Disposition: form-data; name="trade_license_expiry_date"

2030-12-31
--BOUNDARY
Content-Disposition: form-data; name="trade_license_file"; filename="trade.pdf"
Content-Type: application/pdf

< ./trade.pdf
--BOUNDARY--

### List My Trades (shortcut)
GET {{base}}{{prefix}}/professional-trades/mine/
Authorization: Bearer {{token}}

### List Trades (scoped to me; staff sees all)
GET {{base}}{{prefix}}/professional-trades/
Authorization: Bearer {{token}}

### Retrieve Trade
GET {{base}}{{prefix}}/professional-trades/{{trade_id}}/
Authorization: Bearer {{token}}

### Update Trade
PATCH {{base}}{{prefix}}/professional-trades/{{trade_id}}/
Authorization: Bearer {{token}}
Content-Type: application/json

{ "trade_license_number": "TL-2025-0099" }

### Delete Trade
DELETE {{base}}{{prefix}}/professional-trades/{{trade_id}}/
Authorization: Bearer {{token}}

########################################################
# PROFESSIONAL RATINGS (READ-ONLY LIST/RETRIEVE)
########################################################

### List my ratings (as rater) OR use ?professional={id} to see a pro's ratings
GET {{base}}{{prefix}}/professional-ratings/
Authorization: Bearer {{token}}

### Retrieve a single rating
GET {{base}}{{prefix}}/professional-ratings/{{rating_id}}/
Authorization: Bearer {{token}}

########################################################
# PROFESSIONAL PAYOUTS (ModelViewSet â€” create allowed in code)
########################################################

### Create my payout record (if appropriate in your flow)
POST {{base}}{{prefix}}/professional-payouts/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "stripe_account_id": "acct_1Example",
  "payouts_enabled": false,
  "onboarding_complete": false
}

### List My Payouts
GET {{base}}{{prefix}}/professional-payouts/
Authorization: Bearer {{token}}

### Retrieve Payout
GET {{base}}{{prefix}}/professional-payouts/{{payout_id}}/
Authorization: Bearer {{token}}

### Update Payout
PATCH {{base}}{{prefix}}/professional-payouts/{{payout_id}}/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "payouts_enabled": true
}

### Delete Payout
DELETE {{base}}{{prefix}}/professional-payouts/{{payout_id}}/
Authorization: Bearer {{token}}

########################################################
# BANK INFO (singleton upsert via POST; CRUD via id)
########################################################

### Upsert Bank Info (POST will create or update for current professional)
POST {{base}}{{prefix}}/bank-info/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "institution_name": "RBC",
  "institution_number": "003",
  "transit_number": "12345",
  "account_number": "00123456789",
  "account_holder_name": "Jane Doe"
}

### Get My Bank Info (singleton)
GET {{base}}{{prefix}}/bank-info/me/
Authorization: Bearer {{token}}

### List (scoped to me; usually single)
GET {{base}}{{prefix}}/bank-info/
Authorization: Bearer {{token}}

### Retrieve (by id)
GET {{base}}{{prefix}}/bank-info/{{bankinfo_id}}/
Authorization: Bearer {{token}}

### Update (PATCH)
PATCH {{base}}{{prefix}}/bank-info/{{bankinfo_id}}/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "institution_name": "Royal Bank of Canada",
  "account_number": "999888777666"
}

### Delete
DELETE {{base}}{{prefix}}/bank-info/{{bankinfo_id}}/
Authorization: Bearer {{token}}
