@base = http://127.0.0.1:8000
@token = <PUT_ACCESS_TOKEN_HERE>
@refresh = <PUT_REFRESH_TOKEN_HERE>
@email = newuser@example.com
@password = Str0ngPass!
@new_password = EvenStrongerPass1!
@new_email = new.address@example.com
@otp = 123456

###
# Register
POST {{base}}/auth/register/
Content-Type: application/json

{
  "email": "{{email}}",
  "password": "{{password}}"
}

###
# Verify Email (OTP)
POST {{base}}/auth/verify-email/
Content-Type: application/json

{
  "email": "{{email}}",
  "code": "{{otp}}"
}

###
# Resend OTP (generic verify flow)
POST {{base}}/auth/resend-otp/
Content-Type: application/json

{
  "email": "{{email}}"
}

###
# Login (email + password)
POST {{base}}/auth/login/
Content-Type: application/json

{
  "email": "{{email}}",
  "password": "{{password}}"
}

###
# Refresh Access Token
POST {{base}}/auth/token/refresh/
Content-Type: application/json

{
  "refresh": "{{refresh}}"
}

###
# Logout (blacklist refresh)
POST {{base}}/auth/logout/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "refresh": "{{refresh}}"
}

###
# Password Reset — Request Code
POST {{base}}/auth/password-reset/request/
Content-Type: application/json

{
  "email": "{{email}}"
}

###
# Password Reset — Confirm (use OTP)
POST {{base}}/auth/password-reset/confirm/
Content-Type: application/json

{
  "email": "{{email}}",
  "code": "{{otp}}",
  "new_password": "{{new_password}}"
}

###
# Password Reset — Resend OTP
POST {{base}}/password-reset/resend-otp/
Content-Type: application/json

{
  "email": "{{email}}"
}

###
# Email Update — Request (send code to new email)
POST {{base}}/auth/email-update/request/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "new_email": "{{new_email}}"
}

###
# Email Update — Confirm (verify with OTP)
POST {{base}}/auth/email-update/confirm/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "code": "{{otp}}"
}

###
# Email Update — Resend OTP
POST {{base}}/email-update/resend-otp/
Content-Type: application/json

{
  "email": "{{email}}"
}

###
# Profile — Upload/Replace Image
# Use REST Client's file upload syntax: < /absolute/path/to/file
POST {{base}}/auth/profile/image/
Authorization: Bearer {{token}}
Content-Type: multipart/form-data; boundary=BOUND

--BOUND
Content-Disposition: form-data; name="profile_image"; filename="avatar.png"
Content-Type: image/png

< /absolute/path/to/avatar.png
--BOUND--

###
# Profile — Basic fields (first/last/phone) - PATCH
PATCH {{base}}/auth/profile/basic/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "first_name": "Amin",
  "last_name": "Nasiri",
  "phone_number": "+359888123456"
}